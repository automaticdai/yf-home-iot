# Raspberry PI Documentation

[TOC]

## Basic

## Networking

###Eth0

- Configure static address:

Execute `$vim /etc/network/interfaces` and change the content to:

	iface eth0 inet static
	address 192.168.1.100  # Static IP Address
	netmask 255.255.255.0  # Netmask
	gateway 192.168.1.1    # Gateway


### Bluetooth


### WiFi
`sudo iwlist wlan0 scan`

`ifconfig wlan0`

##GPIO
### GPIO Defination
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| BCM   | WIRING  | FUNCTION    | PIN | PIN | FUNCTION   | WIRING   | BCM    |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	|       |         | 3v3         | 1   | 2   | 5v         |          |        |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 2     | 8       | SDA1        | 3   | 4   | 5v         |          |        |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 3     | 9       | SCL1        | 5   | 6   | GND        |          |        |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 4     | 7       | GPCLK0      | 7   | 8   | TXD0       | 15       | 14     |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	|       |         | GND         | 9   | 10  | RXD0       | 16       | 15     |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 17    | 0       |             | 11  | 12  | PWM0       | 1        | 18     |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 27    | 2       |             | 13  | 14  | GND        |          |        |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 22    | 3       |             | 15  | 16  |            | 4        | 23     |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	|       |         | 3v3         | 17  | 18  |            | 5        | 24     |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 10    | 12      | MOSI0       | 19  | 20  | GND        |          |        |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 9     | 13      | MISO0       | 21  | 22  |            | 6        | 25     |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 11    | 14      | SCLK0       | 23  | 24  | CE0        | 10       | 8      |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	|       |         | GND         | 25  | 26  | CE1        | 11       | 7      |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| ----- | ------- | ----------- | --- | --- | ---------- | -------- | ------ |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 0     | 30      | SDA0        | 27  | 28  | SCL0       | 31       | 1      |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 5     | 21      | GPCLK1      | 29  | 30  | GND        |          |        |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 6     | 22      | GPCLK2      | 31  | 32  | PWM0       | 26       | 12     |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 13    | 23      | PWM1        | 33  | 34  | GND        |          |        |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 19    | 24      | MISO1       | 35  | 36  |            | 27       | 16     |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	| 26    | 25      |             | 37  | 38  | MOSI1      | 28       | 20     |
	+-------+---------+-------------+-----+-----+------------+----------+--------+
	|       |         | GND         | 39  | 40  | SCLK1      | 29       | 21     |
	+-------+---------+-------------+-----+-----+------------+----------+--------+

###RPi.GPIO

	#!/usr/bin/python
	import RPi.GPIO as GPIO
	import time
	 
	GPIO.setmode(GPIO.BOARD)
	GPIO.setup(7, GPIO.OUT)
	 
	while True:
	    GPIO.output(7, GPIO.LOW)
	    time.sleep(0.5)
	    GPIO.output(7, GPIO.HIGH)
	    time.sleep(0.5)
 

##I2C
###Setup
Setup environment: `sudo apt-get install python-smbus i2c-tools` 

Detect IIC devices: `iicdetect -y 1`

###SMBus (System Management Bus) Functions

`long write_quick(int addr)` Send only the read / write bit


`long read_byte(int addr)` Read a single byte from a device, without specifying a device register.


`long write_byte(int addr,char val)` Send a single byte to a device


`long read_byte_data(int addr,char cmd)` Read Byte Data transaction.


`long write_byte_data(int addr,char cmd,char val)` Write Byte Data transaction.


`long read_word_data(int addr,char cmd)` Read Word Data transaction.


`long write_word_data(int addr,char cmd,int val)` Write Word Data transaction.


`long process_call(int addr,char cmd,int val)` Process Call transaction.


`long[] read_block_data(int addr,char cmd)` Read Block Data transaction.     


`write_block_data(int addr,char cmd,long vals[])` Write up to 32 bytes to a device.  This fucntion adds an initial byte indicating the length of the vals array before the valls array.  Use `write_i2c_block_data` instead!


`long[] block_process_call(int addr,char cmd,long vals[])` Block Process Call transaction.     	

###I2C Access Functions

`long[] read_i2c_block_data(int addr,char cmd)` Block Read transaction.


`write_i2c_block_data(int addr,char cmd,long vals[])` Block Write transaction.

###Example Code

	#!/usr/bin/python
	import smbus
	
	bus = smbus.SMBus(1)    # 0 = /dev/i2c-0 (port I2C0), 1 = /dev/i2c-1 (port I2C1)
	
	DEVICE_ADDRESS = 0x15      #7 bit address (will be left shifted to add the read write bit)
	DEVICE_REG_MODE1 = 0x00
	DEVICE_REG_LEDOUT0 = 0x1d
	
	#Write a single register
	bus.write_byte_data(DEVICE_ADDRESS, DEVICE_REG_MODE1, 0x80)
	
	#Write an array of registers
	ledout_values = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff]
	bus.write_i2c_block_data(DEVICE_ADDRESS, DEVICE_REG_LEDOUT0, ledout_values)
 

## SPI
`ls /dev/spidev*`

## ADC / DAC
There is no ADC and DAC built in Raspberry PI. However, there are ADC / DAC that uses IIC as a interface, which can be connected to the Raspberry PI IIC bus.author:={Arman Akbarian}
keywords:={web page template webpage latex in html writing equations
table of content automatic reference references formatting markdown
code highlighting scientific documantation pyhat code2html linux
command line text based course page design scientists science}
description:={Web Template for Scientists}
